1-1 For which reason is it better to run the container with a flag -e to give the environment variables rather than put them directly in the Dockerfile? 

Answer: it's better to run the container with a flag -e rather than putting them in the Dockerfile for privacy and confidentiality concerns. Anyone can access the image and see the Dockerfile but they can't access the environment variables given at runtime.

1-2 Why do we need a volume to be attached to our postgres container?

Answer: We must attached a volume to our postgres container in order to create data persistence outside the container, if somehow the container is deleted, then thanks to written data on the host machine, it can retrieve data although the container is deleted.

1-3 Document your database container essentials: commands and Dockerfile.

# Use the official PostgreSQL image as a base
FROM postgres:16

# Define environment variables (custom default configuration)
ENV POSTGRES_DB=db \
    POSTGRES_USER=usr \
    POSTGRES_PASSWORD=pwd

# Copy initialization SQL scripts into the special directory
COPY CreateScheme.sql /docker-entrypoint-initdb.d/
COPY InsertData.sql /docker-entrypoint-initdb.d/

# Build the image
docker build -t efrei-postgres .

# Run the container
docker run --network app-network -d \
  --name db \
  -p 5432:5432 \
  -v "$(pwd)/data:/var/lib/postgresql/data" \
  efrei-postgres

# Create a network to allow connections between containers (PostgreSQL image and adminer)

# Run adminer to see and manage the db
docker run -d --network app-network \
  --name adminer \
  -p 8080:8080 \
  adminer